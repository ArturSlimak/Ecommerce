
# Volumes for data persistence
volumes:
  catalog_mongo_data:
  elasticsearch-data:
  inventory_postgres_data:

# Services
services:
  # Application Services (APIs)
  catalog.api:
    container_name: catalog.api
    build:
      context: .
      dockerfile: src/Services/CatalogService/Dockerfile
    depends_on:
      - catalogdb
      - redis
    environment:
      - MongoDB__ConnectionString=mongodb://catalogdb
      - MongoDB__DatabaseName=catalog_db
      - MongoDB__Collections__Products=products
      - MongoDB__Collections__Categories=categories
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    ports:
      - "80"

  ocelotgw:
    container_name: ocelot.gw
    build:
      context: .
      dockerfile: src/Gateways/OcelotApiGw/Dockerfile
    depends_on:
      - catalog.api
      - redis
      - catalogdb
    environment:
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    ports:
      - 27057:80

  healthcheck:
    container_name: healthcheck
    build:
      context: .
      dockerfile: src/WebApps/HealthCheck/Dockerfile
    environment:
      - HealthChecksUI__HealthChecks__0__Name=Catalog Service
      - HealthChecksUI__HealthChecks__0__Uri=http://catalog.api/health
      - HealthChecksUI__EvaluationTimeOnSeconds=10
      - HealthChecksUI__MinimumSecondsBetweenFailureNotifications=60
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    ports:
      - 27077:80

  # Infrastructure Services
  catalogdb:
    image: mongo
    container_name: catalogdb
    restart: always
    volumes:
      - catalog_mongo_data:/data/db
    ports:
      - 27017:27017

  inventorydb:
    image: postgres
    container_name: inventorydb
    restart: always
    volumes:
      - inventory_postgres_data:/var/lib/postgresql/data/
    ports:
      - 27177:5432
    environment:
      POSTGRES_USER: username 
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inventory_db

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - 27037:6379
 
  rabbitmq:
    container_name: rabbitmq
    restart: always
    image: rabbitmq:4.0.4-management
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "27137:5672"
      - "27157:15672"

  # Logging and Monitoring
  elasticsearch:
    container_name: elasticsearchforlogging
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    ports:
      - 27097:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node


  kibana:
    container_name: kibana
    restart: always
    image: docker.elastic.co/kibana/kibana:8.16.1
    ports:
      - 27117:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200